apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-n8n
  namespace: ai-services
  labels:
    app: redis-n8n
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-n8n
  template:
    metadata:
      labels:
        app: redis-n8n
    spec:
      serviceAccountName: redis-n8n
      nodeSelector:
        kubernetes.io/hostname: pi5-02
        kubernetes.io/arch: arm64
      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        command:
          - redis-server
          - /etc/redis/redis.conf
          - --requirepass
          - $(REDIS_PASSWORD)
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP

        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-n8n-secrets
              key: redis-password

        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"

        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
          readOnly: true

        livenessProbe:
          exec:
            command:
            - redis-cli
            - --raw
            - incr
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          exec:
            command:
            - redis-cli
            - --raw
            - incr
            - ping
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3

        securityContext:
          runAsNonRoot: true
          runAsUser: 999
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-n8n-data-pvc
      - name: redis-config
        configMap:
          name: redis-n8n-config

      # Pod security context
      securityContext:
        fsGroup: 999

      # Restart policy
      restartPolicy: Always

      # Termination grace period
      terminationGracePeriodSeconds: 30
