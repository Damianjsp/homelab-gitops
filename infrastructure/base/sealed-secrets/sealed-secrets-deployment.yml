# Sealed Secrets Controller Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sealed-secrets-controller
  namespace: sealed-secrets
  labels:
    app: sealed-secrets
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sealed-secrets
  template:
    metadata:
      labels:
        app: sealed-secrets
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: "true"
    spec:
      nodeSelector:
        kubernetes.io/arch: arm64
      serviceAccountName: sealed-secrets-controller
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 65534
      containers:
      - name: sealed-secrets-controller
        image: ghcr.io/getsops/sealed-secrets:v0.24.0
        imagePullPolicy: IfNotPresent
        command:
          - controller
        env:
          - name: SEALED_SECRETS_UPDATE_STATUS
            value: "true"
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8081
          name: metrics
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: keys
          mountPath: /etc/sealed-secrets-keys
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: keys
        emptyDir: {}
