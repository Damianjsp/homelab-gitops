apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: monitoring
  labels:
    app: grafana
data:
  grafana.ini: |
    [server]
    http_port = 3000
    domain = 192.168.79.37  # Use IP instead of domain
    root_url = http://192.168.79.37:3000

    [database]
    type = sqlite3
    path = /var/lib/grafana/grafana.db

    [analytics]
    reporting_enabled = false
    check_for_updates = false

    [security]
    admin_user = $__env{GF_SECURITY_ADMIN_USER}
    admin_password = $__env{GF_SECURITY_ADMIN_PASSWORD}

    [plugins]
    enable_alpha = false

    [log]
    level = warn
    mode = console

    [alerting]
    enabled = false  # Save resources

    [unified_alerting]
    enabled = false

    [auth.anonymous]
    enabled = false

  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: VictoriaMetrics
      type: prometheus
      url: http://victoriametrics.monitoring.svc.cluster.local:8428
      access: proxy
      isDefault: true
      editable: true
      jsonData:
        httpMethod: POST
        manageAlerts: false
        prometheusType: Prometheus
        prometheusVersion: 2.40.0
        cacheLevel: 'High'

  dashboards.yaml: |
    apiVersion: 1
    providers:
    - name: 'homelab'
      orgId: 1
      folder: 'Homelab'
      type: file
      disableDeletion: false
      editable: true
      updateIntervalSeconds: 60
      allowUiUpdates: true
      options:
        path: /etc/grafana/dashboards

  node-exporter-1860.json: |
    {
      "dashboard": {
        "id": 1860,
        "title": "Node Exporter Full",
        "tags": ["node-exporter"],
        "description": "Node Exporter Full Dashboard - ID 1860",
        "__inputs": [
          {
            "name": "DS_PROMETHEUS",
            "label": "VictoriaMetrics",
            "description": "",
            "type": "datasource",
            "pluginId": "prometheus"
          }
        ],
        "__requires": [
          {
            "type": "grafana",
            "id": "grafana",
            "name": "Grafana",
            "version": "8.0.0"
          },
          {
            "type": "panel",
            "id": "piechart",
            "name": "Pie chart",
            "version": ""
          },
          {
            "type": "panel",
            "id": "stat",
            "name": "Stat",
            "version": ""
          },
          {
            "type": "panel",
            "id": "timeseries",
            "name": "Time series",
            "version": ""
          },
          {
            "type": "datasource",
            "id": "prometheus",
            "name": "Prometheus",
            "version": "1.0.0"
          }
        ],
        "refresh": "30s",
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "templating": {
          "list": [
            {
              "name": "instance",
              "type": "query",
              "query": "label_values(node_cpu_seconds_total, instance)",
              "refresh": 1,
              "includeAll": true,
              "allValue": ".*",
              "datasource": "VictoriaMetrics"
            }
          ]
        }
      }
    }

  pihole-exporter-10176.json: |
    {
      "dashboard": {
        "id": 10176,
        "title": "Pi-hole Exporter",
        "tags": ["pihole", "dns"],
        "description": "Pi-hole Exporter Dashboard - ID 10176",
        "refresh": "30s",
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "panels": [
          {
            "id": 1,
            "title": "Queries Over Time",
            "type": "timeseries",
            "targets": [
              {
                "expr": "rate(pihole_dns_queries_today[5m]) * 60",
                "legendFormat": "Queries/min",
                "refId": "A"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Blocked Queries",
            "type": "stat",
            "targets": [
              {
                "expr": "pihole_ads_blocked_today",
                "refId": "A"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Top Blocked Domains",
            "type": "piechart",
            "targets": [
              {
                "expr": "topk(10, pihole_top_blocked_domains)",
                "refId": "A"
              }
            ],
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 8}
          }
        ]
      }
    }

  k3s-cluster-16450.json: |
    {
      "dashboard": {
        "id": 16450,
        "title": "Kubernetes / Views / K3s Cluster",
        "tags": ["kubernetes", "k3s", "cluster"],
        "description": "K3s Cluster Monitoring Dashboard - ID 16450",
        "refresh": "30s",
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "templating": {
          "list": [
            {
              "name": "cluster",
              "type": "query",
              "query": "label_values(kube_node_info, cluster)",
              "refresh": 1,
              "includeAll": false,
              "datasource": "VictoriaMetrics"
            },
            {
              "name": "node",
              "type": "query",
              "query": "label_values(kube_node_info{cluster=\"$cluster\"}, node)",
              "refresh": 1,
              "includeAll": true,
              "datasource": "VictoriaMetrics"
            }
          ]
        },
        "panels": [
          {
            "id": 1,
            "title": "Cluster CPU Usage",
            "type": "timeseries",
            "targets": [
              {
                "expr": "100 - (avg(irate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)",
                "legendFormat": "CPU Usage %",
                "refId": "A"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Cluster Memory Usage",
            "type": "timeseries",
            "targets": [
              {
                "expr": "100 * (1 - ((avg(node_memory_MemAvailable_bytes) or avg(node_memory_MemFree_bytes)) / avg(node_memory_MemTotal_bytes)))",
                "legendFormat": "Memory Usage %",
                "refId": "A"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Pods Running",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(kube_pod_status_phase{phase=\"Running\"})",
                "refId": "A"
              }
            ],
            "gridPos": {"h": 4, "w": 6, "x": 0, "y": 8}
          },
          {
            "id": 4,
            "title": "Nodes Ready",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(kube_node_status_condition{condition=\"Ready\", status=\"true\"})",
                "refId": "A"
              }
            ],
            "gridPos": {"h": 4, "w": 6, "x": 6, "y": 8}
          },
          {
            "id": 5,
            "title": "Namespaces",
            "type": "stat",
            "targets": [
              {
                "expr": "count(count by (namespace)(kube_pod_info))",
                "refId": "A"
              }
            ],
            "gridPos": {"h": 4, "w": 6, "x": 12, "y": 8}
          },
          {
            "id": 6,
            "title": "Network I/O",
            "type": "timeseries",
            "targets": [
              {
                "expr": "sum(rate(node_network_receive_bytes_total[5m]))",
                "legendFormat": "Receive",
                "refId": "A"
              },
              {
                "expr": "sum(rate(node_network_transmit_bytes_total[5m]))",
                "legendFormat": "Transmit",
                "refId": "B"
              }
            ],
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 12}
          }
        ]
      }
    }
